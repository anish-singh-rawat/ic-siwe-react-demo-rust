type Error = variant {
  CallFailed : text;
  ExchangeRateError : text;
  InvalidAssetLength;
  EmptyAsset;
};
type Result = variant { Ok : blob; Err : text };
type Result_1 = variant { Ok : record { text; nat64 }; Err : Error };
type Result_2 = variant { Ok : UserProfile; Err : text };
type Result_3 = variant { Ok : vec record { text; UserProfile }; Err : text };
type Result_4 = variant { Ok : text; Err : text };
type UserProfile = record { avatar_url : text; name : text; address : text };
service : {
  get_ecdsa_public_key : () -> (Result);
  get_exchange_rates : (text, opt text, nat) -> (Result_1);
  get_my_profile : () -> (Result_2) query;
  list_profiles : () -> (Result_3) query;
  save_my_profile : (text, text) -> (Result_2);
  send_raw_transaction : (text) -> (Result_4);
}
